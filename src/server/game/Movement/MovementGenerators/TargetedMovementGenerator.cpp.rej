--- src/server/game/Movement/MovementGenerators/TargetedMovementGenerator.cpp
+++ src/server/game/Movement/MovementGenerators/TargetedMovementGenerator.cpp
@@ -147,6 +148,25 @@
         return true;
     }
 
+    // Check whether pet got send to cast a spell
+    if (i_spell)
+    {
+        SpellInfo const* spellInfo = sSpellMgr->GetSpellInfo(i_spell);
+        Spell* spell = new Spell(owner->ToUnit(), spellInfo, TRIGGERED_NONE);
+        SpellCastResult result = spell->CheckPetCast(i_target.getTarget());
+        if (result == SPELL_CAST_OK)
+        {
+            spell->prepare(&(spell->m_targets));
+            // Reset i_spell here to prevent chaincasting.
+            i_spell = 0;
+        }
+        else
+        {
+            spell->finish(false);
+            delete spell;
+        }
+    }
+
     bool targetMoved = false;
     i_recheckDistance.Update(time_diff);
     if (i_recheckDistance.Passed())
